{
  "stats": {
    "suites": 2,
    "tests": 25,
    "passes": 23,
    "pending": 0,
    "failures": 2,
    "start": "2020-06-23T06:12:51.274Z",
    "end": "2020-06-23T06:12:51.274Z",
    "duration": 677385,
    "testsRegistered": 25,
    "passPercent": 92,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "bde05f64-9df8-4188-b847-b074914c51b9",
      "title": "",
      "fullFile": "cypress\\integration\\CoDSupervisorChecks.feature",
      "file": "cypress\\integration\\CoDSupervisorChecks.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "933d6350-4387-4e01-90b6-c0e6df635adc",
          "title": "Cloud on Demand checks - Supervisor",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify if Portal Page loads with Portal Banner \"Ads\"",
              "fullTitle": "Cloud on Demand checks - Supervisor Verify if Portal Page loads with Portal Banner \"Ads\"",
              "timedOut": null,
              "duration": 19805,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9bd61ac0-359c-47a0-a2cc-356b3a702438",
              "parentUUID": "933d6350-4387-4e01-90b6-c0e6df635adc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Skill Management\" (example #1)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Skill Management\" (example #1)",
              "timedOut": null,
              "duration": 18658,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "321ebc42-4dd4-4fed-bfa0-5eaf9f7f25e1",
              "parentUUID": "933d6350-4387-4e01-90b6-c0e6df635adc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Virtual Queue\" (example #2)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Virtual Queue\" (example #2)",
              "timedOut": null,
              "duration": 15888,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c0acb174-2e5c-487a-9cba-54375a8603d2",
              "parentUUID": "933d6350-4387-4e01-90b6-c0e6df635adc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Dashboards\" (example #3)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Dashboards\" (example #3)",
              "timedOut": null,
              "duration": 21717,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "de7c80aa-01ba-42e8-87a1-a58541a8411b",
              "parentUUID": "933d6350-4387-4e01-90b6-c0e6df635adc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Real Time\" (example #4)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Real Time\" (example #4)",
              "timedOut": null,
              "duration": 25459,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8009b16a-f46e-4401-ad44-834b71c44c58",
              "parentUUID": "933d6350-4387-4e01-90b6-c0e6df635adc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Interaction Architect\" (example #5)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Interaction Architect\" (example #5)",
              "timedOut": null,
              "duration": 16767,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b976731d-fc38-427e-800a-d2b6aa9fa26b",
              "parentUUID": "933d6350-4387-4e01-90b6-c0e6df635adc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Interaction Plan Management\" (example #6)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Interaction Plan Management\" (example #6)",
              "timedOut": null,
              "duration": 15069,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "86547792-220e-4049-ac62-54992dcbec79",
              "parentUUID": "933d6350-4387-4e01-90b6-c0e6df635adc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Stats and Reports\" (example #7)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Stats and Reports\" (example #7)",
              "timedOut": null,
              "duration": 27008,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "058d5fbf-9df0-4064-bd38-0e3304e8632f",
              "parentUUID": "933d6350-4387-4e01-90b6-c0e6df635adc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"IVR Data Collector\" (example #8)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"IVR Data Collector\" (example #8)",
              "timedOut": null,
              "duration": 15757,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5e76bd59-59f2-4aaa-8a90-9df5452b4711",
              "parentUUID": "933d6350-4387-4e01-90b6-c0e6df635adc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Call Recordings\" (example #9)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Call Recordings\" (example #9)",
              "timedOut": null,
              "duration": 18346,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2d719d2f-9e46-4cf8-ad11-d109698080d7",
              "parentUUID": "933d6350-4387-4e01-90b6-c0e6df635adc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"System Audit\" (example #10)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"System Audit\" (example #10)",
              "timedOut": null,
              "duration": 17048,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d9d12831-9052-4924-b458-597bfa2c553c",
              "parentUUID": "933d6350-4387-4e01-90b6-c0e6df635adc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"System Settings\" (example #11)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"System Settings\" (example #11)",
              "timedOut": null,
              "duration": 15613,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f50a0e07-1b0b-4555-9f3c-e895f7175986",
              "parentUUID": "933d6350-4387-4e01-90b6-c0e6df635adc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"User Admin\" (example #12)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"User Admin\" (example #12)",
              "timedOut": null,
              "duration": 20750,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a1bc5264-1912-4a5d-ab3d-ed9570fe710e",
              "parentUUID": "933d6350-4387-4e01-90b6-c0e6df635adc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"User Access\" (example #13)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"User Access\" (example #13)",
              "timedOut": null,
              "duration": 19422,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0f3a9a8c-65be-4103-8e6c-88ec8ed50b3a",
              "parentUUID": "933d6350-4387-4e01-90b6-c0e6df635adc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"API Admin\" (example #14)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"API Admin\" (example #14)",
              "timedOut": null,
              "duration": 14828,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "db8a0b41-f6f1-41ec-9d57-57bf96819a82",
              "parentUUID": "933d6350-4387-4e01-90b6-c0e6df635adc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Salesforce Administration\" (example #15)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Salesforce Administration\" (example #15)",
              "timedOut": null,
              "duration": 18072,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2f8c361a-21f6-43ec-bc7c-8a478ed94826",
              "parentUUID": "933d6350-4387-4e01-90b6-c0e6df635adc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Cadence\" (example #16)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Cadence\" (example #16)",
              "timedOut": null,
              "duration": 20788,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d36a73d1-2996-4b64-8292-e4882b6f8016",
              "parentUUID": "933d6350-4387-4e01-90b6-c0e6df635adc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9bd61ac0-359c-47a0-a2cc-356b3a702438",
            "321ebc42-4dd4-4fed-bfa0-5eaf9f7f25e1",
            "c0acb174-2e5c-487a-9cba-54375a8603d2",
            "de7c80aa-01ba-42e8-87a1-a58541a8411b",
            "8009b16a-f46e-4401-ad44-834b71c44c58",
            "b976731d-fc38-427e-800a-d2b6aa9fa26b",
            "86547792-220e-4049-ac62-54992dcbec79",
            "058d5fbf-9df0-4064-bd38-0e3304e8632f",
            "5e76bd59-59f2-4aaa-8a90-9df5452b4711",
            "2d719d2f-9e46-4cf8-ad11-d109698080d7",
            "d9d12831-9052-4924-b458-597bfa2c553c",
            "f50a0e07-1b0b-4555-9f3c-e895f7175986",
            "a1bc5264-1912-4a5d-ab3d-ed9570fe710e",
            "0f3a9a8c-65be-4103-8e6c-88ec8ed50b3a",
            "db8a0b41-f6f1-41ec-9d57-57bf96819a82",
            "2f8c361a-21f6-43ec-bc7c-8a478ed94826",
            "d36a73d1-2996-4b64-8292-e4882b6f8016"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 320995,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4db769f6-1c7d-4b47-b1b5-7411468f3163",
      "title": "",
      "fullFile": "cypress\\integration\\CoDAgentChecks.feature",
      "file": "cypress\\integration\\CoDAgentChecks.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a1ef7919-477f-4225-866e-e45769c2a8b2",
          "title": "Cloud on Demand checks - Agent",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Agent can handle Inbound Call via ACD",
              "fullTitle": "Cloud on Demand checks - Agent Agent can handle Inbound Call via ACD",
              "timedOut": null,
              "duration": 52403,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '[id|=interactionsListContainer] [class|=interactionListItemColumn]', but never found it. Queried from element: <body>",
                "estack": "CypressError: Timed out retrying: Expected to find element: '[id|=interactionsListContainer] [class|=interactionListItemColumn]', but never found it. Queried from element: <body>\n    at Object.cypressErr (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:86207:11)\n    at Object.throwErr (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:86162:18)\n    at Object.throwErrByPath (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:86194:17)\n    at retry (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:76849:16)\n    at onFailFn (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:65634:16)\n    at tryCatcher (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:120203:23)\n    at Promise._settlePromiseFromHandler (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:118139:31)\n    at Promise._settlePromise (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:118196:18)\n    at Promise._settlePromise0 (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:118241:10)\n    at Promise._settlePromises (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:118316:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:114928:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:114938:10)\n    at Async.drainQueues (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:114812:14)",
                "diff": null
              },
              "uuid": "ccd3b672-ed16-47ba-b915-747b3b9aa90a",
              "parentUUID": "a1ef7919-477f-4225-866e-e45769c2a8b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Agent can handle Inbound Call via UCD",
              "fullTitle": "Cloud on Demand checks - Agent Agent can handle Inbound Call via UCD",
              "timedOut": null,
              "duration": 41377,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "823adc73-4acb-4468-ac00-9ab893328bae",
              "parentUUID": "a1ef7919-477f-4225-866e-e45769c2a8b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Agent can make Outbound call",
              "fullTitle": "Cloud on Demand checks - Agent Agent can make Outbound call",
              "timedOut": null,
              "duration": 45198,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "bb5e05b6-ec98-415a-be2d-3d4b7df46e78",
              "parentUUID": "a1ef7919-477f-4225-866e-e45769c2a8b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Agent can hold and retrieve during Inbound Call",
              "fullTitle": "Cloud on Demand checks - Agent Agent can hold and retrieve during Inbound Call",
              "timedOut": null,
              "duration": 50639,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "CypressError: Timed out retrying: cy.click() failed because this element is disabled:\n\n<button id=\"CallControlHold\" type=\"submit\" data-feature-key=\"CallControlHold\" disabled=\"disabled\" class=\"disabled\">Hold</button>\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with",
                "estack": "CypressError: Timed out retrying: cy.click() failed because this element is disabled:\n\n<button id=\"CallControlHold\" type=\"submit\" data-feature-key=\"CallControlHold\" disabled=\"disabled\" class=\"disabled\">Hold</button>\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with\n    at Object.cypressErr (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:86207:11)\n    at Object.throwErr (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:86162:18)\n    at Object.throwErrByPath (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:86194:17)\n    at Object.retry (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:76849:16)\n    at retryActionability (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:65238:19)\n    at tryCatcher (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:120203:23)\n    at Function.Promise.attempt.Promise.try (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:117478:29)\n    at tryFn (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:77307:21)\n    at whenStable (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:77342:12)\n    at https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:76892:16\n    at tryCatcher (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:120203:23)\n    at Promise._settlePromiseFromHandler (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:118139:31)\n    at Promise._settlePromise (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:118196:18)\n    at Promise._settlePromise0 (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:118241:10)\n    at Promise._settlePromises (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:118320:18)\n    at Promise._fulfill (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:118265:18)",
                "diff": null
              },
              "uuid": "1d993acd-0b82-475b-971a-088326976550",
              "parentUUID": "a1ef7919-477f-4225-866e-e45769c2a8b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Agent can hold and retrieve during Outbound Call",
              "fullTitle": "Cloud on Demand checks - Agent Agent can hold and retrieve during Outbound Call",
              "timedOut": null,
              "duration": 59220,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f581db28-85a0-4dec-8b30-56cd3ad555f8",
              "parentUUID": "a1ef7919-477f-4225-866e-e45769c2a8b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Agent presence can be change from Ready to Away & Away to Ready",
              "fullTitle": "Cloud on Demand checks - Agent Agent presence can be change from Ready to Away & Away to Ready",
              "timedOut": null,
              "duration": 34272,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "dd30b85a-9872-4db7-b635-0077d5d0ab12",
              "parentUUID": "a1ef7919-477f-4225-866e-e45769c2a8b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Agent Telephone number can be set via Settings",
              "fullTitle": "Cloud on Demand checks - Agent Agent Telephone number can be set via Settings",
              "timedOut": null,
              "duration": 40143,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9c6efae0-7a2b-4de3-927f-11531807e195",
              "parentUUID": "a1ef7919-477f-4225-866e-e45769c2a8b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Agent can navigate through Info tab, Call History tab, Call in Queue tab",
              "fullTitle": "Cloud on Demand checks - Agent Agent can navigate through Info tab, Call History tab, Call in Queue tab",
              "timedOut": null,
              "duration": 33138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9db7e463-41fc-41c1-9e6e-43291ae2395e",
              "parentUUID": "a1ef7919-477f-4225-866e-e45769c2a8b2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "823adc73-4acb-4468-ac00-9ab893328bae",
            "bb5e05b6-ec98-415a-be2d-3d4b7df46e78",
            "f581db28-85a0-4dec-8b30-56cd3ad555f8",
            "dd30b85a-9872-4db7-b635-0077d5d0ab12",
            "9c6efae0-7a2b-4de3-927f-11531807e195",
            "9db7e463-41fc-41c1-9e6e-43291ae2395e"
          ],
          "failures": [
            "ccd3b672-ed16-47ba-b915-747b3b9aa90a",
            "1d993acd-0b82-475b-971a-088326976550"
          ],
          "pending": [],
          "skipped": [],
          "duration": 356390,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/separate-reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}