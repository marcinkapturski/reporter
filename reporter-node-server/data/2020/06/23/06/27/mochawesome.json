{
  "stats": {
    "suites": 2,
    "tests": 25,
    "passes": 23,
    "pending": 0,
    "failures": 2,
    "start": "2020-06-23T03:26:42.896Z",
    "end": "2020-06-23T03:26:42.896Z",
    "duration": 746347,
    "testsRegistered": 25,
    "passPercent": 92,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0d4fa9ee-70cd-4a1b-9ad2-15c91847ea6f",
      "title": "",
      "fullFile": "cypress\\integration\\CoDSupervisorChecks.feature",
      "file": "cypress\\integration\\CoDSupervisorChecks.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3fc1ae20-075c-4748-b08f-ba2f13096c07",
          "title": "Cloud on Demand checks - Supervisor",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify if Portal Page loads with Portal Banner \"Ads\"",
              "fullTitle": "Cloud on Demand checks - Supervisor Verify if Portal Page loads with Portal Banner \"Ads\"",
              "timedOut": null,
              "duration": 19807,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2fa1aae2-7141-465a-bb31-8697602058f6",
              "parentUUID": "3fc1ae20-075c-4748-b08f-ba2f13096c07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Skill Management\" (example #1)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Skill Management\" (example #1)",
              "timedOut": null,
              "duration": 23068,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e8133111-98af-4779-a531-053cc7497164",
              "parentUUID": "3fc1ae20-075c-4748-b08f-ba2f13096c07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Virtual Queue\" (example #2)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Virtual Queue\" (example #2)",
              "timedOut": null,
              "duration": 16045,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7793b7ea-8ea1-4fc4-9f07-44cdb447da1c",
              "parentUUID": "3fc1ae20-075c-4748-b08f-ba2f13096c07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Dashboards\" (example #3)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Dashboards\" (example #3)",
              "timedOut": null,
              "duration": 15514,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d88e513e-6476-4986-b750-eea679dc34f8",
              "parentUUID": "3fc1ae20-075c-4748-b08f-ba2f13096c07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Real Time\" (example #4)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Real Time\" (example #4)",
              "timedOut": null,
              "duration": 32906,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "91e425b2-e943-462e-b49f-f4e243de3f03",
              "parentUUID": "3fc1ae20-075c-4748-b08f-ba2f13096c07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Interaction Architect\" (example #5)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Interaction Architect\" (example #5)",
              "timedOut": null,
              "duration": 18180,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3643445b-14be-4a73-ab67-cef43db9abf7",
              "parentUUID": "3fc1ae20-075c-4748-b08f-ba2f13096c07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Interaction Plan Management\" (example #6)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Interaction Plan Management\" (example #6)",
              "timedOut": null,
              "duration": 24273,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e98e0475-051e-471d-b03b-ac36dca47546",
              "parentUUID": "3fc1ae20-075c-4748-b08f-ba2f13096c07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Stats and Reports\" (example #7)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Stats and Reports\" (example #7)",
              "timedOut": null,
              "duration": 28245,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9c6d71d7-56aa-47d2-958b-56bfc4de1faa",
              "parentUUID": "3fc1ae20-075c-4748-b08f-ba2f13096c07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"IVR Data Collector\" (example #8)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"IVR Data Collector\" (example #8)",
              "timedOut": null,
              "duration": 15572,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8d2ac3d2-ce78-41b6-902f-2dd98fd8bf2a",
              "parentUUID": "3fc1ae20-075c-4748-b08f-ba2f13096c07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Call Recordings\" (example #9)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Call Recordings\" (example #9)",
              "timedOut": null,
              "duration": 20315,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "936981fd-3ceb-45c7-85e9-f00e14065764",
              "parentUUID": "3fc1ae20-075c-4748-b08f-ba2f13096c07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"System Audit\" (example #10)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"System Audit\" (example #10)",
              "timedOut": null,
              "duration": 22629,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "68d10f7c-a756-4bd1-8112-2740821efcec",
              "parentUUID": "3fc1ae20-075c-4748-b08f-ba2f13096c07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"System Settings\" (example #11)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"System Settings\" (example #11)",
              "timedOut": null,
              "duration": 15529,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "63c21332-c798-43f7-a037-218583b85adc",
              "parentUUID": "3fc1ae20-075c-4748-b08f-ba2f13096c07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"User Admin\" (example #12)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"User Admin\" (example #12)",
              "timedOut": null,
              "duration": 42984,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "937f2361-64c1-4efc-915b-504fe346b65a",
              "parentUUID": "3fc1ae20-075c-4748-b08f-ba2f13096c07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"User Access\" (example #13)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"User Access\" (example #13)",
              "timedOut": null,
              "duration": 23681,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "882a455b-8d2e-41b3-a02b-d9c67d586760",
              "parentUUID": "3fc1ae20-075c-4748-b08f-ba2f13096c07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"API Admin\" (example #14)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"API Admin\" (example #14)",
              "timedOut": null,
              "duration": 21369,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "00a821b4-f889-4d2a-a8b9-7c2f2d1821b4",
              "parentUUID": "3fc1ae20-075c-4748-b08f-ba2f13096c07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Salesforce Administration\" (example #15)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Salesforce Administration\" (example #15)",
              "timedOut": null,
              "duration": 22673,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1c76f94b-b81e-4b14-abca-184b7d6ef134",
              "parentUUID": "3fc1ae20-075c-4748-b08f-ba2f13096c07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Cadence\" (example #16)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Cadence\" (example #16)",
              "timedOut": null,
              "duration": 16172,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1b074717-a878-4be1-8c5f-2a71511ca1a4",
              "parentUUID": "3fc1ae20-075c-4748-b08f-ba2f13096c07",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2fa1aae2-7141-465a-bb31-8697602058f6",
            "e8133111-98af-4779-a531-053cc7497164",
            "7793b7ea-8ea1-4fc4-9f07-44cdb447da1c",
            "d88e513e-6476-4986-b750-eea679dc34f8",
            "91e425b2-e943-462e-b49f-f4e243de3f03",
            "3643445b-14be-4a73-ab67-cef43db9abf7",
            "e98e0475-051e-471d-b03b-ac36dca47546",
            "9c6d71d7-56aa-47d2-958b-56bfc4de1faa",
            "8d2ac3d2-ce78-41b6-902f-2dd98fd8bf2a",
            "936981fd-3ceb-45c7-85e9-f00e14065764",
            "68d10f7c-a756-4bd1-8112-2740821efcec",
            "63c21332-c798-43f7-a037-218583b85adc",
            "937f2361-64c1-4efc-915b-504fe346b65a",
            "882a455b-8d2e-41b3-a02b-d9c67d586760",
            "00a821b4-f889-4d2a-a8b9-7c2f2d1821b4",
            "1c76f94b-b81e-4b14-abca-184b7d6ef134",
            "1b074717-a878-4be1-8c5f-2a71511ca1a4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 378962,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "25611689-84be-43b6-9386-f96f4e28d11b",
      "title": "",
      "fullFile": "cypress\\integration\\CoDAgentChecks.feature",
      "file": "cypress\\integration\\CoDAgentChecks.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ebefc1e4-d73d-4700-b559-9abf9fcee249",
          "title": "Cloud on Demand checks - Agent",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Agent can handle Inbound Call via ACD",
              "fullTitle": "Cloud on Demand checks - Agent Agent can handle Inbound Call via ACD",
              "timedOut": null,
              "duration": 53326,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '[id|=interactionsListContainer] [class|=interactionListItemColumn]', but never found it. Queried from element: <body>",
                "estack": "CypressError: Timed out retrying: Expected to find element: '[id|=interactionsListContainer] [class|=interactionListItemColumn]', but never found it. Queried from element: <body>\n    at Object.cypressErr (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:86207:11)\n    at Object.throwErr (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:86162:18)\n    at Object.throwErrByPath (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:86194:17)\n    at retry (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:76849:16)\n    at onFailFn (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:65634:16)\n    at tryCatcher (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:120203:23)\n    at Promise._settlePromiseFromHandler (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:118139:31)\n    at Promise._settlePromise (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:118196:18)\n    at Promise._settlePromise0 (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:118241:10)\n    at Promise._settlePromises (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:118316:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:114928:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:114938:10)\n    at Async.drainQueues (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:114812:14)",
                "diff": null
              },
              "uuid": "ddebc451-377c-4017-9fed-02f23aa316c1",
              "parentUUID": "ebefc1e4-d73d-4700-b559-9abf9fcee249",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Agent can handle Inbound Call via UCD",
              "fullTitle": "Cloud on Demand checks - Agent Agent can handle Inbound Call via UCD",
              "timedOut": null,
              "duration": 52652,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "872a2c08-c835-43e1-811c-febbe7647707",
              "parentUUID": "ebefc1e4-d73d-4700-b559-9abf9fcee249",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Agent can make Outbound call",
              "fullTitle": "Cloud on Demand checks - Agent Agent can make Outbound call",
              "timedOut": null,
              "duration": 51814,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f4ed7cdd-e326-49d0-a010-43e53410fd93",
              "parentUUID": "ebefc1e4-d73d-4700-b559-9abf9fcee249",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Agent can hold and retrieve during Inbound Call",
              "fullTitle": "Cloud on Demand checks - Agent Agent can hold and retrieve during Inbound Call",
              "timedOut": null,
              "duration": 50839,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "CypressError: Timed out retrying: cy.click() failed because this element is disabled:\n\n<button id=\"CallControlHold\" type=\"submit\" data-feature-key=\"CallControlHold\" disabled=\"disabled\" class=\"disabled\">Hold</button>\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with",
                "estack": "CypressError: Timed out retrying: cy.click() failed because this element is disabled:\n\n<button id=\"CallControlHold\" type=\"submit\" data-feature-key=\"CallControlHold\" disabled=\"disabled\" class=\"disabled\">Hold</button>\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with\n    at Object.cypressErr (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:86207:11)\n    at Object.throwErr (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:86162:18)\n    at Object.throwErrByPath (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:86194:17)\n    at Object.retry (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:76849:16)\n    at retryActionability (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:65238:19)\n    at tryCatcher (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:120203:23)\n    at Function.Promise.attempt.Promise.try (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:117478:29)\n    at tryFn (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:77307:21)\n    at whenStable (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:77342:12)\n    at https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:76892:16\n    at tryCatcher (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:120203:23)\n    at Promise._settlePromiseFromHandler (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:118139:31)\n    at Promise._settlePromise (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:118196:18)\n    at Promise._settlePromise0 (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:118241:10)\n    at Promise._settlePromises (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:118320:18)\n    at Promise._fulfill (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:118265:18)",
                "diff": null
              },
              "uuid": "55f41cc7-c488-4aa8-bc60-82517652e063",
              "parentUUID": "ebefc1e4-d73d-4700-b559-9abf9fcee249",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Agent can hold and retrieve during Outbound Call",
              "fullTitle": "Cloud on Demand checks - Agent Agent can hold and retrieve during Outbound Call",
              "timedOut": null,
              "duration": 58923,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "319f4d5f-322f-429a-9bdf-61907890f8c5",
              "parentUUID": "ebefc1e4-d73d-4700-b559-9abf9fcee249",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Agent presence can be change from Ready to Away & Away to Ready",
              "fullTitle": "Cloud on Demand checks - Agent Agent presence can be change from Ready to Away & Away to Ready",
              "timedOut": null,
              "duration": 34159,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "995122f2-be92-4b22-858c-2bd7ab7d88fe",
              "parentUUID": "ebefc1e4-d73d-4700-b559-9abf9fcee249",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Agent Telephone number can be set via Settings",
              "fullTitle": "Cloud on Demand checks - Agent Agent Telephone number can be set via Settings",
              "timedOut": null,
              "duration": 34343,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d62c422a-3eb8-4e48-8479-41e09f81deb4",
              "parentUUID": "ebefc1e4-d73d-4700-b559-9abf9fcee249",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Agent can navigate through Info tab, Call History tab, Call in Queue tab",
              "fullTitle": "Cloud on Demand checks - Agent Agent can navigate through Info tab, Call History tab, Call in Queue tab",
              "timedOut": null,
              "duration": 31329,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "03136503-dc44-4a21-b876-4e530fd3f741",
              "parentUUID": "ebefc1e4-d73d-4700-b559-9abf9fcee249",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "872a2c08-c835-43e1-811c-febbe7647707",
            "f4ed7cdd-e326-49d0-a010-43e53410fd93",
            "319f4d5f-322f-429a-9bdf-61907890f8c5",
            "995122f2-be92-4b22-858c-2bd7ab7d88fe",
            "d62c422a-3eb8-4e48-8479-41e09f81deb4",
            "03136503-dc44-4a21-b876-4e530fd3f741"
          ],
          "failures": [
            "ddebc451-377c-4017-9fed-02f23aa316c1",
            "55f41cc7-c488-4aa8-bc60-82517652e063"
          ],
          "pending": [],
          "skipped": [],
          "duration": 367385,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/separate-reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}