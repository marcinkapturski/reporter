{
  "stats": {
    "suites": 2,
    "tests": 20,
    "passes": 20,
    "pending": 0,
    "failures": 0,
    "start": "2020-06-20T02:16:07.148Z",
    "end": "2020-06-20T02:16:07.148Z",
    "duration": 414442,
    "testsRegistered": 20,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "66789a93-4818-4ed5-88b8-f2b4c8186e81",
      "title": "",
      "fullFile": "cypress\\integration\\CoDSupervisorChecks.feature",
      "file": "cypress\\integration\\CoDSupervisorChecks.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "eefe817d-adc2-46ae-bd9a-b0edb6b2e4e2",
          "title": "Cloud on Demand checks - Supervisor",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify if Portal Page loads with Portal Banner \"Ads\"",
              "fullTitle": "Cloud on Demand checks - Supervisor Verify if Portal Page loads with Portal Banner \"Ads\"",
              "timedOut": null,
              "duration": 18459,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "80bf9eb1-8cd6-4bc6-8cc7-9e7f44ab013b",
              "parentUUID": "eefe817d-adc2-46ae-bd9a-b0edb6b2e4e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Skill Management\" (example #1)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Skill Management\" (example #1)",
              "timedOut": null,
              "duration": 17197,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "bf711924-9340-4721-b33b-163d462c3817",
              "parentUUID": "eefe817d-adc2-46ae-bd9a-b0edb6b2e4e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Virtual Queue\" (example #2)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Virtual Queue\" (example #2)",
              "timedOut": null,
              "duration": 14914,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "548c670a-60c8-43d6-b1a7-728955669b67",
              "parentUUID": "eefe817d-adc2-46ae-bd9a-b0edb6b2e4e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Dashboards\" (example #3)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Dashboards\" (example #3)",
              "timedOut": null,
              "duration": 20184,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9319ec38-e197-4b15-adda-1456671c6b3f",
              "parentUUID": "eefe817d-adc2-46ae-bd9a-b0edb6b2e4e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Real Time\" (example #4)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Real Time\" (example #4)",
              "timedOut": null,
              "duration": 30113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "07a2980d-f747-4ce0-8e86-0e9eabdba919",
              "parentUUID": "eefe817d-adc2-46ae-bd9a-b0edb6b2e4e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Interaction Architect\" (example #5)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Interaction Architect\" (example #5)",
              "timedOut": null,
              "duration": 16901,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "32777243-32ca-4537-ad00-54ff159b5146",
              "parentUUID": "eefe817d-adc2-46ae-bd9a-b0edb6b2e4e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Interaction Plan Management\" (example #6)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Interaction Plan Management\" (example #6)",
              "timedOut": null,
              "duration": 15424,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b59f8a41-30ec-4f84-b853-34fb3295dd83",
              "parentUUID": "eefe817d-adc2-46ae-bd9a-b0edb6b2e4e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Stats and Reports\" (example #7)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Stats and Reports\" (example #7)",
              "timedOut": null,
              "duration": 20019,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f34823b4-06ea-4ec8-b854-7a9ca2947703",
              "parentUUID": "eefe817d-adc2-46ae-bd9a-b0edb6b2e4e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"IVR Data Collector\" (example #8)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"IVR Data Collector\" (example #8)",
              "timedOut": null,
              "duration": 17245,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a151663c-81fe-4773-9583-03ba2650ea0b",
              "parentUUID": "eefe817d-adc2-46ae-bd9a-b0edb6b2e4e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Call Recordings\" (example #9)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Call Recordings\" (example #9)",
              "timedOut": null,
              "duration": 17373,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "245bb0df-3ce8-4a25-83d6-9c6e7dfd64b6",
              "parentUUID": "eefe817d-adc2-46ae-bd9a-b0edb6b2e4e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"System Audit\" (example #10)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"System Audit\" (example #10)",
              "timedOut": null,
              "duration": 24958,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9b844649-b593-49b4-a02d-6521c310cffd",
              "parentUUID": "eefe817d-adc2-46ae-bd9a-b0edb6b2e4e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"System Settings\" (example #11)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"System Settings\" (example #11)",
              "timedOut": null,
              "duration": 21361,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4a07cb6a-1315-4b57-b6b4-077d2bac5973",
              "parentUUID": "eefe817d-adc2-46ae-bd9a-b0edb6b2e4e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"User Admin\" (example #12)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"User Admin\" (example #12)",
              "timedOut": null,
              "duration": 15132,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "041d40c4-5168-4d4c-b8d1-6d6252a45d64",
              "parentUUID": "eefe817d-adc2-46ae-bd9a-b0edb6b2e4e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"User Access\" (example #13)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"User Access\" (example #13)",
              "timedOut": null,
              "duration": 16962,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f5a5e568-48b8-4d3d-a51b-0d195e52ffa9",
              "parentUUID": "eefe817d-adc2-46ae-bd9a-b0edb6b2e4e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"API Admin\" (example #14)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"API Admin\" (example #14)",
              "timedOut": null,
              "duration": 13036,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "56ed6d55-db6a-4020-8481-1a1a1c5bfff1",
              "parentUUID": "eefe817d-adc2-46ae-bd9a-b0edb6b2e4e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Salesforce Administration\" (example #15)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Salesforce Administration\" (example #15)",
              "timedOut": null,
              "duration": 15939,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f9e91d1e-6440-40f4-b3bc-5ebd49086026",
              "parentUUID": "eefe817d-adc2-46ae-bd9a-b0edb6b2e4e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Cadence\" (example #16)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Cadence\" (example #16)",
              "timedOut": null,
              "duration": 13781,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "dc996d05-81b1-4fb1-9bb2-ee9d4b08d3c9",
              "parentUUID": "eefe817d-adc2-46ae-bd9a-b0edb6b2e4e2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "80bf9eb1-8cd6-4bc6-8cc7-9e7f44ab013b",
            "bf711924-9340-4721-b33b-163d462c3817",
            "548c670a-60c8-43d6-b1a7-728955669b67",
            "9319ec38-e197-4b15-adda-1456671c6b3f",
            "07a2980d-f747-4ce0-8e86-0e9eabdba919",
            "32777243-32ca-4537-ad00-54ff159b5146",
            "b59f8a41-30ec-4f84-b853-34fb3295dd83",
            "f34823b4-06ea-4ec8-b854-7a9ca2947703",
            "a151663c-81fe-4773-9583-03ba2650ea0b",
            "245bb0df-3ce8-4a25-83d6-9c6e7dfd64b6",
            "9b844649-b593-49b4-a02d-6521c310cffd",
            "4a07cb6a-1315-4b57-b6b4-077d2bac5973",
            "041d40c4-5168-4d4c-b8d1-6d6252a45d64",
            "f5a5e568-48b8-4d3d-a51b-0d195e52ffa9",
            "56ed6d55-db6a-4020-8481-1a1a1c5bfff1",
            "f9e91d1e-6440-40f4-b3bc-5ebd49086026",
            "dc996d05-81b1-4fb1-9bb2-ee9d4b08d3c9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 308998,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2e9303ac-9489-4b94-b2d8-639945e06469",
      "title": "",
      "fullFile": "cypress\\integration\\CoDAgentChecks.feature",
      "file": "cypress\\integration\\CoDAgentChecks.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5d34587d-3ea4-4a0b-8e0e-b203012f71a5",
          "title": "Cloud on Demand checks - Agent",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Agent presence can be change from Ready to Away & Away to Ready",
              "fullTitle": "Cloud on Demand checks - Agent Agent presence can be change from Ready to Away & Away to Ready",
              "timedOut": null,
              "duration": 41690,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8e238aa7-3315-4857-bcc7-70230e78f343",
              "parentUUID": "5d34587d-3ea4-4a0b-8e0e-b203012f71a5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Agent Telephone number can be set via Settings",
              "fullTitle": "Cloud on Demand checks - Agent Agent Telephone number can be set via Settings",
              "timedOut": null,
              "duration": 37786,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b18bc711-0809-4dcb-bd3d-f4ce6d592e4d",
              "parentUUID": "5d34587d-3ea4-4a0b-8e0e-b203012f71a5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Agent can navigate through Info tab, Call History tab, Call in Queue tab",
              "fullTitle": "Cloud on Demand checks - Agent Agent can navigate through Info tab, Call History tab, Call in Queue tab",
              "timedOut": null,
              "duration": 25968,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "560f3c9e-59d6-40b2-84fd-a2620ef37104",
              "parentUUID": "5d34587d-3ea4-4a0b-8e0e-b203012f71a5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8e238aa7-3315-4857-bcc7-70230e78f343",
            "b18bc711-0809-4dcb-bd3d-f4ce6d592e4d",
            "560f3c9e-59d6-40b2-84fd-a2620ef37104"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 105444,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/separate-reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}