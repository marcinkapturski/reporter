{
  "stats": {
    "suites": 2,
    "tests": 25,
    "passes": 23,
    "pending": 0,
    "failures": 2,
    "start": "2020-06-22T21:25:21.365Z",
    "end": "2020-06-22T21:25:21.365Z",
    "duration": 659781,
    "testsRegistered": 25,
    "passPercent": 92,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6c03c2ce-db5f-4393-9bc0-6ce079011de1",
      "title": "",
      "fullFile": "cypress\\integration\\CoDSupervisorChecks.feature",
      "file": "cypress\\integration\\CoDSupervisorChecks.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5d23919b-0b47-46ea-8418-99aa773108c6",
          "title": "Cloud on Demand checks - Supervisor",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify if Portal Page loads with Portal Banner \"Ads\"",
              "fullTitle": "Cloud on Demand checks - Supervisor Verify if Portal Page loads with Portal Banner \"Ads\"",
              "timedOut": null,
              "duration": 24685,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8b866fe0-e521-448f-97cd-0807e3495aca",
              "parentUUID": "5d23919b-0b47-46ea-8418-99aa773108c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Skill Management\" (example #1)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Skill Management\" (example #1)",
              "timedOut": null,
              "duration": 17848,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "74145908-c7b0-4a1a-a792-2215e99fe86f",
              "parentUUID": "5d23919b-0b47-46ea-8418-99aa773108c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Virtual Queue\" (example #2)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Virtual Queue\" (example #2)",
              "timedOut": null,
              "duration": 18960,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "81f7e5a6-282e-4270-8500-9d28142aaa56",
              "parentUUID": "5d23919b-0b47-46ea-8418-99aa773108c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Dashboards\" (example #3)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Dashboards\" (example #3)",
              "timedOut": null,
              "duration": 13922,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b7d2fe5b-cfa1-4c58-9bfe-d00c5f84c3cb",
              "parentUUID": "5d23919b-0b47-46ea-8418-99aa773108c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Real Time\" (example #4)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Real Time\" (example #4)",
              "timedOut": null,
              "duration": 24411,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e2300cf1-e6b3-47ee-85c1-99164b24bf4e",
              "parentUUID": "5d23919b-0b47-46ea-8418-99aa773108c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Interaction Architect\" (example #5)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Interaction Architect\" (example #5)",
              "timedOut": null,
              "duration": 16630,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "66e49d41-387b-4ce6-b0a8-864a22a2c44d",
              "parentUUID": "5d23919b-0b47-46ea-8418-99aa773108c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Interaction Plan Management\" (example #6)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Interaction Plan Management\" (example #6)",
              "timedOut": null,
              "duration": 13617,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "13802c36-f256-4a3a-aa2c-74b8dedd6525",
              "parentUUID": "5d23919b-0b47-46ea-8418-99aa773108c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Stats and Reports\" (example #7)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Stats and Reports\" (example #7)",
              "timedOut": null,
              "duration": 20826,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e15173b0-00e1-4ad5-bb5b-453b1c5cadee",
              "parentUUID": "5d23919b-0b47-46ea-8418-99aa773108c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"IVR Data Collector\" (example #8)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"IVR Data Collector\" (example #8)",
              "timedOut": null,
              "duration": 16394,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "105e5e04-91b1-4030-bbbc-54e628045bcc",
              "parentUUID": "5d23919b-0b47-46ea-8418-99aa773108c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Call Recordings\" (example #9)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Call Recordings\" (example #9)",
              "timedOut": null,
              "duration": 17823,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0a1dd3ba-2639-463f-b925-5ef13428bee3",
              "parentUUID": "5d23919b-0b47-46ea-8418-99aa773108c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"System Audit\" (example #10)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"System Audit\" (example #10)",
              "timedOut": null,
              "duration": 20654,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f944fe29-b156-41d1-bc80-264205b7630e",
              "parentUUID": "5d23919b-0b47-46ea-8418-99aa773108c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"System Settings\" (example #11)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"System Settings\" (example #11)",
              "timedOut": null,
              "duration": 14890,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e3bc30e8-b6c6-4d09-93e4-65bbe7d323b7",
              "parentUUID": "5d23919b-0b47-46ea-8418-99aa773108c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"User Admin\" (example #12)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"User Admin\" (example #12)",
              "timedOut": null,
              "duration": 19900,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9be6e595-b6b8-4b1e-a0cd-64339bb8f799",
              "parentUUID": "5d23919b-0b47-46ea-8418-99aa773108c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"User Access\" (example #13)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"User Access\" (example #13)",
              "timedOut": null,
              "duration": 16036,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c801d566-0c20-4770-83d9-40f44a747a1c",
              "parentUUID": "5d23919b-0b47-46ea-8418-99aa773108c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"API Admin\" (example #14)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"API Admin\" (example #14)",
              "timedOut": null,
              "duration": 14426,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7b76a2c0-a966-4f6d-a2fd-c72ab2561893",
              "parentUUID": "5d23919b-0b47-46ea-8418-99aa773108c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Salesforce Administration\" (example #15)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Salesforce Administration\" (example #15)",
              "timedOut": null,
              "duration": 15821,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8bfff6e4-b47d-44e7-982d-55eac8c304da",
              "parentUUID": "5d23919b-0b47-46ea-8418-99aa773108c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Cadence\" (example #16)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Cadence\" (example #16)",
              "timedOut": null,
              "duration": 14041,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5a1f2c1f-6940-438e-9c61-1004b4532d16",
              "parentUUID": "5d23919b-0b47-46ea-8418-99aa773108c6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8b866fe0-e521-448f-97cd-0807e3495aca",
            "74145908-c7b0-4a1a-a792-2215e99fe86f",
            "81f7e5a6-282e-4270-8500-9d28142aaa56",
            "b7d2fe5b-cfa1-4c58-9bfe-d00c5f84c3cb",
            "e2300cf1-e6b3-47ee-85c1-99164b24bf4e",
            "66e49d41-387b-4ce6-b0a8-864a22a2c44d",
            "13802c36-f256-4a3a-aa2c-74b8dedd6525",
            "e15173b0-00e1-4ad5-bb5b-453b1c5cadee",
            "105e5e04-91b1-4030-bbbc-54e628045bcc",
            "0a1dd3ba-2639-463f-b925-5ef13428bee3",
            "f944fe29-b156-41d1-bc80-264205b7630e",
            "e3bc30e8-b6c6-4d09-93e4-65bbe7d323b7",
            "9be6e595-b6b8-4b1e-a0cd-64339bb8f799",
            "c801d566-0c20-4770-83d9-40f44a747a1c",
            "7b76a2c0-a966-4f6d-a2fd-c72ab2561893",
            "8bfff6e4-b47d-44e7-982d-55eac8c304da",
            "5a1f2c1f-6940-438e-9c61-1004b4532d16"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 300884,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1ac6a994-a064-4953-9b85-c1f97575e16d",
      "title": "",
      "fullFile": "cypress\\integration\\CoDAgentChecks.feature",
      "file": "cypress\\integration\\CoDAgentChecks.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f4f00d4f-f3c8-4cdc-a373-9dd0612d5533",
          "title": "Cloud on Demand checks - Agent",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Agent can handle Inbound Call via ACD",
              "fullTitle": "Cloud on Demand checks - Agent Agent can handle Inbound Call via ACD",
              "timedOut": null,
              "duration": 57192,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '[id|=interactionsListContainer] [class|=interactionListItemColumn]', but never found it. Queried from element: <body>",
                "estack": "CypressError: Timed out retrying: Expected to find element: '[id|=interactionsListContainer] [class|=interactionListItemColumn]', but never found it. Queried from element: <body>\n    at Object.cypressErr (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:86207:11)\n    at Object.throwErr (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:86162:18)\n    at Object.throwErrByPath (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:86194:17)\n    at retry (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:76849:16)\n    at onFailFn (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:65634:16)\n    at tryCatcher (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:120203:23)\n    at Promise._settlePromiseFromHandler (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:118139:31)\n    at Promise._settlePromise (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:118196:18)\n    at Promise._settlePromise0 (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:118241:10)\n    at Promise._settlePromises (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:118316:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:114928:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:114938:10)\n    at Async.drainQueues (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:114812:14)",
                "diff": null
              },
              "uuid": "ab2531e2-5b9b-4fdd-87f9-253d29d45ada",
              "parentUUID": "f4f00d4f-f3c8-4cdc-a373-9dd0612d5533",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Agent can handle Inbound Call via UCD",
              "fullTitle": "Cloud on Demand checks - Agent Agent can handle Inbound Call via UCD",
              "timedOut": null,
              "duration": 46511,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b3436300-c8b9-439a-94a0-5dae061196aa",
              "parentUUID": "f4f00d4f-f3c8-4cdc-a373-9dd0612d5533",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Agent can make Outbound call",
              "fullTitle": "Cloud on Demand checks - Agent Agent can make Outbound call",
              "timedOut": null,
              "duration": 45692,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "afbec850-9ce2-4ded-b313-fa71cc73422d",
              "parentUUID": "f4f00d4f-f3c8-4cdc-a373-9dd0612d5533",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Agent can hold and retrieve during Inbound Call",
              "fullTitle": "Cloud on Demand checks - Agent Agent can hold and retrieve during Inbound Call",
              "timedOut": null,
              "duration": 43821,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "CypressError: Timed out retrying: cy.click() failed because this element is disabled:\n\n<button id=\"CallControlHold\" type=\"submit\" data-feature-key=\"CallControlHold\" disabled=\"disabled\" class=\"disabled\">Hold</button>\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with",
                "estack": "CypressError: Timed out retrying: cy.click() failed because this element is disabled:\n\n<button id=\"CallControlHold\" type=\"submit\" data-feature-key=\"CallControlHold\" disabled=\"disabled\" class=\"disabled\">Hold</button>\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with\n    at Object.cypressErr (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:86207:11)\n    at Object.throwErr (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:86162:18)\n    at Object.throwErrByPath (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:86194:17)\n    at Object.retry (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:76849:16)\n    at retryActionability (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:65238:19)\n    at tryCatcher (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:120203:23)\n    at Function.Promise.attempt.Promise.try (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:117478:29)\n    at tryFn (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:77307:21)\n    at whenStable (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:77342:12)\n    at https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:76892:16\n    at tryCatcher (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:120203:23)\n    at Promise._settlePromiseFromHandler (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:118139:31)\n    at Promise._settlePromise (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:118196:18)\n    at Promise._settlePromise0 (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:118241:10)\n    at Promise._settlePromises (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:118320:18)\n    at Promise._fulfill (https://itg-test-pdx.nvminternal.net/__cypress/runner/cypress_runner.js:118265:18)",
                "diff": null
              },
              "uuid": "3d99ad76-6bd0-4945-af5d-3d01525ce191",
              "parentUUID": "f4f00d4f-f3c8-4cdc-a373-9dd0612d5533",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Agent can hold and retrieve during Outbound Call",
              "fullTitle": "Cloud on Demand checks - Agent Agent can hold and retrieve during Outbound Call",
              "timedOut": null,
              "duration": 59586,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "80500e82-d758-4c24-a25b-0c835e5c0e47",
              "parentUUID": "f4f00d4f-f3c8-4cdc-a373-9dd0612d5533",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Agent presence can be change from Ready to Away & Away to Ready",
              "fullTitle": "Cloud on Demand checks - Agent Agent presence can be change from Ready to Away & Away to Ready",
              "timedOut": null,
              "duration": 41008,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e998e5e2-daf4-4885-84af-c5467f0b9c3c",
              "parentUUID": "f4f00d4f-f3c8-4cdc-a373-9dd0612d5533",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Agent Telephone number can be set via Settings",
              "fullTitle": "Cloud on Demand checks - Agent Agent Telephone number can be set via Settings",
              "timedOut": null,
              "duration": 37634,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9ac170f5-e7de-4e68-ae23-2426e05964f7",
              "parentUUID": "f4f00d4f-f3c8-4cdc-a373-9dd0612d5533",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Agent can navigate through Info tab, Call History tab, Call in Queue tab",
              "fullTitle": "Cloud on Demand checks - Agent Agent can navigate through Info tab, Call History tab, Call in Queue tab",
              "timedOut": null,
              "duration": 27453,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d79d644a-b94d-4206-aaad-4e28f0925e36",
              "parentUUID": "f4f00d4f-f3c8-4cdc-a373-9dd0612d5533",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b3436300-c8b9-439a-94a0-5dae061196aa",
            "afbec850-9ce2-4ded-b313-fa71cc73422d",
            "80500e82-d758-4c24-a25b-0c835e5c0e47",
            "e998e5e2-daf4-4885-84af-c5467f0b9c3c",
            "9ac170f5-e7de-4e68-ae23-2426e05964f7",
            "d79d644a-b94d-4206-aaad-4e28f0925e36"
          ],
          "failures": [
            "ab2531e2-5b9b-4fdd-87f9-253d29d45ada",
            "3d99ad76-6bd0-4945-af5d-3d01525ce191"
          ],
          "pending": [],
          "skipped": [],
          "duration": 358897,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/separate-reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}