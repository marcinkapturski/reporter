{
  "stats": {
    "suites": 2,
    "tests": 20,
    "passes": 20,
    "pending": 0,
    "failures": 0,
    "start": "2020-06-20T16:46:06.202Z",
    "end": "2020-06-20T16:46:06.202Z",
    "duration": 407903,
    "testsRegistered": 20,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8abd26ef-4b7a-4978-a74f-9ef7608e320e",
      "title": "",
      "fullFile": "cypress\\integration\\CoDSupervisorChecks.feature",
      "file": "cypress\\integration\\CoDSupervisorChecks.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3ac57df4-c595-4ca8-a2d3-aee9238e2f92",
          "title": "Cloud on Demand checks - Supervisor",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify if Portal Page loads with Portal Banner \"Ads\"",
              "fullTitle": "Cloud on Demand checks - Supervisor Verify if Portal Page loads with Portal Banner \"Ads\"",
              "timedOut": null,
              "duration": 18524,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "82ab8f2c-8d88-449b-a770-867ca8d942ae",
              "parentUUID": "3ac57df4-c595-4ca8-a2d3-aee9238e2f92",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Skill Management\" (example #1)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Skill Management\" (example #1)",
              "timedOut": null,
              "duration": 23614,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0ce75679-d755-4fa4-a274-e39e65d55503",
              "parentUUID": "3ac57df4-c595-4ca8-a2d3-aee9238e2f92",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Virtual Queue\" (example #2)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Virtual Queue\" (example #2)",
              "timedOut": null,
              "duration": 14498,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "50774fbd-7f71-4c8d-8e72-fc639c0b897b",
              "parentUUID": "3ac57df4-c595-4ca8-a2d3-aee9238e2f92",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Dashboards\" (example #3)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Dashboards\" (example #3)",
              "timedOut": null,
              "duration": 14212,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3fa0aac8-8753-4e3f-a831-7b9405267c8b",
              "parentUUID": "3ac57df4-c595-4ca8-a2d3-aee9238e2f92",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Real Time\" (example #4)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Real Time\" (example #4)",
              "timedOut": null,
              "duration": 29741,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7d4ca211-af18-4c95-915e-0a38d743df58",
              "parentUUID": "3ac57df4-c595-4ca8-a2d3-aee9238e2f92",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Interaction Architect\" (example #5)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Interaction Architect\" (example #5)",
              "timedOut": null,
              "duration": 17290,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "bfb8c6a3-85bd-4ba3-b56e-53ae4ac1d592",
              "parentUUID": "3ac57df4-c595-4ca8-a2d3-aee9238e2f92",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Interaction Plan Management\" (example #6)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Interaction Plan Management\" (example #6)",
              "timedOut": null,
              "duration": 15924,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c2604d90-43f6-4663-b215-3cc6aed6b82b",
              "parentUUID": "3ac57df4-c595-4ca8-a2d3-aee9238e2f92",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Stats and Reports\" (example #7)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Stats and Reports\" (example #7)",
              "timedOut": null,
              "duration": 21386,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "70949501-887c-4331-acd3-8b96fb600718",
              "parentUUID": "3ac57df4-c595-4ca8-a2d3-aee9238e2f92",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"IVR Data Collector\" (example #8)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"IVR Data Collector\" (example #8)",
              "timedOut": null,
              "duration": 15245,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "45277835-1ce6-439f-8ded-d8454f7bad0f",
              "parentUUID": "3ac57df4-c595-4ca8-a2d3-aee9238e2f92",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Call Recordings\" (example #9)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Call Recordings\" (example #9)",
              "timedOut": null,
              "duration": 17646,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c8f08ce5-daed-4a62-8d66-c9630b60d62e",
              "parentUUID": "3ac57df4-c595-4ca8-a2d3-aee9238e2f92",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"System Audit\" (example #10)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"System Audit\" (example #10)",
              "timedOut": null,
              "duration": 20284,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c638073d-d659-4e0c-9794-67a153606f67",
              "parentUUID": "3ac57df4-c595-4ca8-a2d3-aee9238e2f92",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"System Settings\" (example #11)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"System Settings\" (example #11)",
              "timedOut": null,
              "duration": 20639,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "55ed93d4-f81c-43ee-9ad4-8927fae7c279",
              "parentUUID": "3ac57df4-c595-4ca8-a2d3-aee9238e2f92",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"User Admin\" (example #12)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"User Admin\" (example #12)",
              "timedOut": null,
              "duration": 14876,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "37c31e3c-0b75-45bd-a48f-220030b34ab6",
              "parentUUID": "3ac57df4-c595-4ca8-a2d3-aee9238e2f92",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"User Access\" (example #13)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"User Access\" (example #13)",
              "timedOut": null,
              "duration": 17745,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "636928ad-7c52-4a4f-9265-f3cd2ee9ba53",
              "parentUUID": "3ac57df4-c595-4ca8-a2d3-aee9238e2f92",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"API Admin\" (example #14)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"API Admin\" (example #14)",
              "timedOut": null,
              "duration": 15300,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "cff2a977-ccac-411a-a525-1ad1d7d82357",
              "parentUUID": "3ac57df4-c595-4ca8-a2d3-aee9238e2f92",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Salesforce Administration\" (example #15)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Salesforce Administration\" (example #15)",
              "timedOut": null,
              "duration": 15510,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d521bc98-223b-4635-8cc0-671de96d00bd",
              "parentUUID": "3ac57df4-c595-4ca8-a2d3-aee9238e2f92",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As a Supervisor I have access to \"Cadence\" (example #16)",
              "fullTitle": "Cloud on Demand checks - Supervisor As a Supervisor I have access to \"Cadence\" (example #16)",
              "timedOut": null,
              "duration": 13721,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a9fd340b-5a6d-4922-8d9e-e08f8f662b0a",
              "parentUUID": "3ac57df4-c595-4ca8-a2d3-aee9238e2f92",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "82ab8f2c-8d88-449b-a770-867ca8d942ae",
            "0ce75679-d755-4fa4-a274-e39e65d55503",
            "50774fbd-7f71-4c8d-8e72-fc639c0b897b",
            "3fa0aac8-8753-4e3f-a831-7b9405267c8b",
            "7d4ca211-af18-4c95-915e-0a38d743df58",
            "bfb8c6a3-85bd-4ba3-b56e-53ae4ac1d592",
            "c2604d90-43f6-4663-b215-3cc6aed6b82b",
            "70949501-887c-4331-acd3-8b96fb600718",
            "45277835-1ce6-439f-8ded-d8454f7bad0f",
            "c8f08ce5-daed-4a62-8d66-c9630b60d62e",
            "c638073d-d659-4e0c-9794-67a153606f67",
            "55ed93d4-f81c-43ee-9ad4-8927fae7c279",
            "37c31e3c-0b75-45bd-a48f-220030b34ab6",
            "636928ad-7c52-4a4f-9265-f3cd2ee9ba53",
            "cff2a977-ccac-411a-a525-1ad1d7d82357",
            "d521bc98-223b-4635-8cc0-671de96d00bd",
            "a9fd340b-5a6d-4922-8d9e-e08f8f662b0a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 306155,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0ef12e79-3185-49c4-b9ba-a29a56fc13c2",
      "title": "",
      "fullFile": "cypress\\integration\\CoDAgentChecks.feature",
      "file": "cypress\\integration\\CoDAgentChecks.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1961c411-0f7a-4d4e-98ec-8b8169d41778",
          "title": "Cloud on Demand checks - Agent",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Agent presence can be change from Ready to Away & Away to Ready",
              "fullTitle": "Cloud on Demand checks - Agent Agent presence can be change from Ready to Away & Away to Ready",
              "timedOut": null,
              "duration": 42084,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b78fe770-276b-45f6-b620-75789fea1171",
              "parentUUID": "1961c411-0f7a-4d4e-98ec-8b8169d41778",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Agent Telephone number can be set via Settings",
              "fullTitle": "Cloud on Demand checks - Agent Agent Telephone number can be set via Settings",
              "timedOut": null,
              "duration": 31598,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "bdd7e141-c1a2-403e-a3ba-4387b754e4e0",
              "parentUUID": "1961c411-0f7a-4d4e-98ec-8b8169d41778",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Agent can navigate through Info tab, Call History tab, Call in Queue tab",
              "fullTitle": "Cloud on Demand checks - Agent Agent can navigate through Info tab, Call History tab, Call in Queue tab",
              "timedOut": null,
              "duration": 28066,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b0716719-5096-4dc8-9062-54ce4a7aa23d",
              "parentUUID": "1961c411-0f7a-4d4e-98ec-8b8169d41778",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b78fe770-276b-45f6-b620-75789fea1171",
            "bdd7e141-c1a2-403e-a3ba-4387b754e4e0",
            "b0716719-5096-4dc8-9062-54ce4a7aa23d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 101748,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/separate-reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}